@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix gax-validation:  <http://w3id.org/gaia-x/validation#> .

@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix dcat: <http://www.w3.org/ns/dcat#> .
@prefix gax-core: <http://w3id.org/gaia-x/core#> .
@prefix gax-node: <http://w3id.org/gaia-x/node#> .
@prefix gax-resource: <http://w3id.org/gaia-x/resource#> .
@prefix gax-participant: <http://w3id.org/gaia-x/participant#> .
@prefix gax-service: <http://w3id.org/gaia-x/service#> .
@prefix vcard: <http://www.w3.org/2006/vcard/ns#> .
@prefix did: <https://www.w3.org/TR/did-core/#> .

gax-validation:SoftwareOfferingShape
	a sh:NodeShape ;
	sh:targetClass gax-service:SoftwareOffering ;
	sh:property [ sh:path gax-service:serviceTitle ;
				  sh:name "service title" ;
				  sh:order 1 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path dct:description ;
				  sh:name "description" ;
				  sh:order 2 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-service:endpoint ;
				  sh:name "endpoint" ;
				  sh:order 3 ;
				  sh:minCount 1 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:anyURI ] ;
	sh:property [ sh:path gax-service:providedBy ;
				  sh:name "provided by" ;
				  sh:order 4 ;
				  sh:minCount 1 ;
				  sh:maxCount 1 ;
				  sh:nodeKind sh:IRI ] ;
	sh:property [ sh:path gax-service:aggregationOf ;
				  sh:name "aggregation of" ;
				  sh:order 5 ;
				  sh:nodeKind sh:IRI ] ;
	sh:property [ sh:path gax-service:termsAndConditions ;
				  sh:name "terms and conditions" ;
				  sh:order 6 ;
				  sh:minCount 1 ;
				  sh:datatype xsd:anyURI ] ;
	sh:property [ sh:path gax-service:policies ;
				  sh:name "policies" ;
				  sh:order 7 ;
				  sh:minCount 0 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path dcat:keyword ;
				  sh:name "keyword" ;
				  sh:order 8 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-service:provisionType ;
				  sh:name "provision type" ;
				  sh:order 9 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-service:dependsOn ;
				  sh:name "depends on" ;
				  sh:order 10 ;
				  sh:nodeKind sh:IRI ] ;
.

gax-validation:IdentityAccessManagementShape
	a sh:NodeShape ;
	sh:targetClass gax-service:IdentityAccessManagement ;
	sh:property [ sh:path gax-service:disableUserAccountDaysInactive ;
				  sh:name "disable user account days inactive" ;
				  sh:order 1 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:integer ] ;
	sh:property [ sh:path gax-service:passwordExpiresDays ;
				  sh:name "password expires days" ;
				  sh:order 2 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:integer ] ;
	sh:property [ sh:path gax-service:authKind ;
				  sh:name "auth kind" ;
				  sh:order 3 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-service:serviceTitle ;
				  sh:name "service title" ;
				  sh:order 1 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path dct:description ;
				  sh:name "description" ;
				  sh:order 2 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-service:endpoint ;
				  sh:name "endpoint" ;
				  sh:order 3 ;
				  sh:minCount 1 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:anyURI ] ;
	sh:property [ sh:path gax-service:providedBy ;
				  sh:name "provided by" ;
				  sh:order 4 ;
				  sh:minCount 1 ;
				  sh:maxCount 1 ;
				  sh:nodeKind sh:IRI ] ;
	sh:property [ sh:path gax-service:aggregationOf ;
				  sh:name "aggregation of" ;
				  sh:order 5 ;
				  sh:nodeKind sh:IRI ] ;
	sh:property [ sh:path gax-service:termsAndConditions ;
				  sh:name "terms and conditions" ;
				  sh:order 6 ;
				  sh:minCount 1 ;
				  sh:datatype xsd:anyURI ] ;
	sh:property [ sh:path gax-service:policies ;
				  sh:name "policies" ;
				  sh:order 7 ;
				  sh:minCount 0 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path dcat:keyword ;
				  sh:name "keyword" ;
				  sh:order 8 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-service:provisionType ;
				  sh:name "provision type" ;
				  sh:order 9 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-service:dependsOn ;
				  sh:name "depends on" ;
				  sh:order 10 ;
				  sh:nodeKind sh:IRI ] ;
.

gax-validation:ComputeShape
	a sh:NodeShape ;
	sh:targetClass gax-service:Compute ;
	sh:property [ sh:path gax-service:serviceType ;
				  sh:name "service type" ;
				  sh:order 1 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-service:tennantSeparation ;
				  sh:name "tennant separation" ;
				  sh:order 2 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-service:flavor ;
				  sh:name "flavor" ;
				  sh:order 3 ;
				  sh:minCount 1 ;
				  sh:node gax-validation:FlavorShape ] ;
	sh:property [ sh:path gax-service:usedHypervisor ;
				  sh:name "used hypervisor" ;
				  sh:order 4 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:nodeKind sh:IRI ] ;
	sh:property [ sh:path gax-service:serviceTitle ;
				  sh:name "service title" ;
				  sh:order 1 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path dct:description ;
				  sh:name "description" ;
				  sh:order 2 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-service:endpoint ;
				  sh:name "endpoint" ;
				  sh:order 3 ;
				  sh:minCount 1 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:anyURI ] ;
	sh:property [ sh:path gax-service:providedBy ;
				  sh:name "provided by" ;
				  sh:order 4 ;
				  sh:minCount 1 ;
				  sh:maxCount 1 ;
				  sh:nodeKind sh:IRI ] ;
	sh:property [ sh:path gax-service:aggregationOf ;
				  sh:name "aggregation of" ;
				  sh:order 5 ;
				  sh:nodeKind sh:IRI ] ;
	sh:property [ sh:path gax-service:termsAndConditions ;
				  sh:name "terms and conditions" ;
				  sh:order 6 ;
				  sh:minCount 1 ;
				  sh:datatype xsd:anyURI ] ;
	sh:property [ sh:path gax-service:policies ;
				  sh:name "policies" ;
				  sh:order 7 ;
				  sh:minCount 0 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path dcat:keyword ;
				  sh:name "keyword" ;
				  sh:order 8 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-service:provisionType ;
				  sh:name "provision type" ;
				  sh:order 9 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-service:dependsOn ;
				  sh:name "depends on" ;
				  sh:order 10 ;
				  sh:nodeKind sh:IRI ] ;
.

gax-validation:FlavorShape
	a sh:NodeShape ;
	sh:targetClass gax-core:Flavor ;
	sh:property [ sh:path gax-core:name ;
				  sh:name "name" ;
				  sh:order 1 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-core:cpuType ;
				  sh:name "cpu type" ;
				  sh:order 2 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-core:cpuGeneration ;
				  sh:name "cpu generation" ;
				  sh:order 3 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-core:numberOfvCPUs ;
				  sh:name "number ofv c p us" ;
				  sh:order 4 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:integer ] ;
	sh:property [ sh:path gax-core:ramSize ;
				  sh:name "ram size" ;
				  sh:order 5 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:node gax-validation:MeasureShape ] ;
	sh:property [ sh:path gax-core:diskSize ;
				  sh:name "disk size" ;
				  sh:order 6 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:node gax-validation:MeasureShape ] ;
	sh:property [ sh:path gax-core:diskType ;
				  sh:name "disk type" ;
				  sh:order 7 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
.

gax-validation:MeasureShape
	a sh:NodeShape ;
	sh:targetClass gax-core:Measure ;
	sh:property [ sh:path gax-core:Value ;
				  sh:name " value" ;
				  sh:order 1 ;
				  sh:minCount 1 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:float ] ;
	sh:property [ sh:path gax-core:Unit ;
				  sh:name " unit" ;
				  sh:order 2 ;
				  sh:minCount 1 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
.

gax-validation:StorageShape
	a sh:NodeShape ;
	sh:targetClass gax-service:Storage ;
	sh:property [ sh:path gax-service:serviceType ;
				  sh:name "service type" ;
				  sh:order 1 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-service:encryptionMethod ;
				  sh:name "encryption method" ;
				  sh:order 2 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-service:snapshotSupported ;
				  sh:name "snapshot supported" ;
				  sh:order 3 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:boolean ] ;
	sh:property [ sh:path gax-service:backupsSupported ;
				  sh:name "backups supported" ;
				  sh:order 4 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:boolean ] ;
	sh:property [ sh:path gax-service:serviceTitle ;
				  sh:name "service title" ;
				  sh:order 1 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path dct:description ;
				  sh:name "description" ;
				  sh:order 2 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-service:endpoint ;
				  sh:name "endpoint" ;
				  sh:order 3 ;
				  sh:minCount 1 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:anyURI ] ;
	sh:property [ sh:path gax-service:providedBy ;
				  sh:name "provided by" ;
				  sh:order 4 ;
				  sh:minCount 1 ;
				  sh:maxCount 1 ;
				  sh:nodeKind sh:IRI ] ;
	sh:property [ sh:path gax-service:aggregationOf ;
				  sh:name "aggregation of" ;
				  sh:order 5 ;
				  sh:nodeKind sh:IRI ] ;
	sh:property [ sh:path gax-service:termsAndConditions ;
				  sh:name "terms and conditions" ;
				  sh:order 6 ;
				  sh:minCount 1 ;
				  sh:datatype xsd:anyURI ] ;
	sh:property [ sh:path gax-service:policies ;
				  sh:name "policies" ;
				  sh:order 7 ;
				  sh:minCount 0 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path dcat:keyword ;
				  sh:name "keyword" ;
				  sh:order 8 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-service:provisionType ;
				  sh:name "provision type" ;
				  sh:order 9 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-service:dependsOn ;
				  sh:name "depends on" ;
				  sh:order 10 ;
				  sh:nodeKind sh:IRI ] ;
.

gax-validation:BlockStorageShape
	a sh:NodeShape ;
	sh:targetClass gax-service:BlockStorage ;
	sh:property [ sh:path gax-service:volumeTypes ;
				  sh:name "volume types" ;
				  sh:order 1 ;
				  sh:node gax-validation:VolumeTypeShape ] ;
	sh:property [ sh:path gax-service:serviceType ;
				  sh:name "service type" ;
				  sh:order 1 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-service:encryptionMethod ;
				  sh:name "encryption method" ;
				  sh:order 2 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-service:snapshotSupported ;
				  sh:name "snapshot supported" ;
				  sh:order 3 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:boolean ] ;
	sh:property [ sh:path gax-service:backupsSupported ;
				  sh:name "backups supported" ;
				  sh:order 4 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:boolean ] ;
	sh:property [ sh:path gax-service:serviceTitle ;
				  sh:name "service title" ;
				  sh:order 1 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path dct:description ;
				  sh:name "description" ;
				  sh:order 2 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-service:endpoint ;
				  sh:name "endpoint" ;
				  sh:order 3 ;
				  sh:minCount 1 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:anyURI ] ;
	sh:property [ sh:path gax-service:providedBy ;
				  sh:name "provided by" ;
				  sh:order 4 ;
				  sh:minCount 1 ;
				  sh:maxCount 1 ;
				  sh:nodeKind sh:IRI ] ;
	sh:property [ sh:path gax-service:aggregationOf ;
				  sh:name "aggregation of" ;
				  sh:order 5 ;
				  sh:nodeKind sh:IRI ] ;
	sh:property [ sh:path gax-service:termsAndConditions ;
				  sh:name "terms and conditions" ;
				  sh:order 6 ;
				  sh:minCount 1 ;
				  sh:datatype xsd:anyURI ] ;
	sh:property [ sh:path gax-service:policies ;
				  sh:name "policies" ;
				  sh:order 7 ;
				  sh:minCount 0 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path dcat:keyword ;
				  sh:name "keyword" ;
				  sh:order 8 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-service:provisionType ;
				  sh:name "provision type" ;
				  sh:order 9 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-service:dependsOn ;
				  sh:name "depends on" ;
				  sh:order 10 ;
				  sh:nodeKind sh:IRI ] ;
.

gax-validation:VolumeTypeShape
	a sh:NodeShape ;
	sh:targetClass gax-core:VolumeType ;
	sh:property [ sh:path gax-core:name ;
				  sh:name "name" ;
				  sh:order 1 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
.

gax-validation:NetworkShape
	a sh:NodeShape ;
	sh:targetClass gax-service:Network ;
	sh:property [ sh:path gax-service:serviceType ;
				  sh:name "service type" ;
				  sh:order 1 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-service:publicIpAddressProvisioning ;
				  sh:name "public ip address provisioning" ;
				  sh:order 2 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-service:ipVersion ;
				  sh:name "ip version" ;
				  sh:order 3 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-service:tennantSeparation ;
				  sh:name "tennant separation" ;
				  sh:order 4 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-service:serviceTitle ;
				  sh:name "service title" ;
				  sh:order 1 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path dct:description ;
				  sh:name "description" ;
				  sh:order 2 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-service:endpoint ;
				  sh:name "endpoint" ;
				  sh:order 3 ;
				  sh:minCount 1 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:anyURI ] ;
	sh:property [ sh:path gax-service:providedBy ;
				  sh:name "provided by" ;
				  sh:order 4 ;
				  sh:minCount 1 ;
				  sh:maxCount 1 ;
				  sh:nodeKind sh:IRI ] ;
	sh:property [ sh:path gax-service:aggregationOf ;
				  sh:name "aggregation of" ;
				  sh:order 5 ;
				  sh:nodeKind sh:IRI ] ;
	sh:property [ sh:path gax-service:termsAndConditions ;
				  sh:name "terms and conditions" ;
				  sh:order 6 ;
				  sh:minCount 1 ;
				  sh:datatype xsd:anyURI ] ;
	sh:property [ sh:path gax-service:policies ;
				  sh:name "policies" ;
				  sh:order 7 ;
				  sh:minCount 0 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path dcat:keyword ;
				  sh:name "keyword" ;
				  sh:order 8 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-service:provisionType ;
				  sh:name "provision type" ;
				  sh:order 9 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-service:dependsOn ;
				  sh:name "depends on" ;
				  sh:order 10 ;
				  sh:nodeKind sh:IRI ] ;
.

gax-validation:ImageRegistryShape
	a sh:NodeShape ;
	sh:targetClass gax-service:ImageRegistry ;
	sh:property [ sh:path gax-service:image ;
				  sh:name "image" ;
				  sh:order 1 ;
				  sh:nodeKind sh:IRI ] ;
	sh:property [ sh:path gax-service:encryptionMethod ;
				  sh:name "encryption method" ;
				  sh:order 2 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-service:signatureType ;
				  sh:name "signature type" ;
				  sh:order 3 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:boolean ] ;
	sh:property [ sh:path gax-service:privateImagesAllowed ;
				  sh:name "private images allowed" ;
				  sh:order 4 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:boolean ] ;
	sh:property [ sh:path gax-service:serviceTitle ;
				  sh:name "service title" ;
				  sh:order 1 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path dct:description ;
				  sh:name "description" ;
				  sh:order 2 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-service:endpoint ;
				  sh:name "endpoint" ;
				  sh:order 3 ;
				  sh:minCount 1 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:anyURI ] ;
	sh:property [ sh:path gax-service:providedBy ;
				  sh:name "provided by" ;
				  sh:order 4 ;
				  sh:minCount 1 ;
				  sh:maxCount 1 ;
				  sh:nodeKind sh:IRI ] ;
	sh:property [ sh:path gax-service:aggregationOf ;
				  sh:name "aggregation of" ;
				  sh:order 5 ;
				  sh:nodeKind sh:IRI ] ;
	sh:property [ sh:path gax-service:termsAndConditions ;
				  sh:name "terms and conditions" ;
				  sh:order 6 ;
				  sh:minCount 1 ;
				  sh:datatype xsd:anyURI ] ;
	sh:property [ sh:path gax-service:policies ;
				  sh:name "policies" ;
				  sh:order 7 ;
				  sh:minCount 0 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path dcat:keyword ;
				  sh:name "keyword" ;
				  sh:order 8 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-service:provisionType ;
				  sh:name "provision type" ;
				  sh:order 9 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-service:dependsOn ;
				  sh:name "depends on" ;
				  sh:order 10 ;
				  sh:nodeKind sh:IRI ] ;
.

gax-validation:InfrastructureShape
	a sh:NodeShape ;
	sh:targetClass gax-service:Infrastructure ;
	sh:property [ sh:path gax-service:serviceTitle ;
				  sh:name "service title" ;
				  sh:order 1 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path dct:description ;
				  sh:name "description" ;
				  sh:order 2 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-service:endpoint ;
				  sh:name "endpoint" ;
				  sh:order 3 ;
				  sh:minCount 1 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:anyURI ] ;
	sh:property [ sh:path gax-service:providedBy ;
				  sh:name "provided by" ;
				  sh:order 4 ;
				  sh:minCount 1 ;
				  sh:maxCount 1 ;
				  sh:nodeKind sh:IRI ] ;
	sh:property [ sh:path gax-service:aggregationOf ;
				  sh:name "aggregation of" ;
				  sh:order 5 ;
				  sh:nodeKind sh:IRI ] ;
	sh:property [ sh:path gax-service:termsAndConditions ;
				  sh:name "terms and conditions" ;
				  sh:order 6 ;
				  sh:minCount 1 ;
				  sh:datatype xsd:anyURI ] ;
	sh:property [ sh:path gax-service:policies ;
				  sh:name "policies" ;
				  sh:order 7 ;
				  sh:minCount 0 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path dcat:keyword ;
				  sh:name "keyword" ;
				  sh:order 8 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-service:provisionType ;
				  sh:name "provision type" ;
				  sh:order 9 ;
				  sh:minCount 0 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-service:dependsOn ;
				  sh:name "depends on" ;
				  sh:order 10 ;
				  sh:nodeKind sh:IRI ] ;
.
